-- MySQL Script generated by MySQL Workbench
-- 08/07/15 12:23:18
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema gpt-qoutes
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema gpt-qoutes
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `gpt-qoutes` DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ;
USE `gpt-qoutes` ;

-- -----------------------------------------------------
-- Table `gpt-qoutes`.`users`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `gpt-qoutes`.`users` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `username` VARCHAR(128) NOT NULL COMMENT '',
  `email` VARCHAR(128) NOT NULL COMMENT '',
  `password` VARCHAR(128) NOT NULL COMMENT '',
  `last_login` DATETIME NOT NULL COMMENT '',
  `first_name` VARCHAR(128) NULL COMMENT '',
  `surname` VARCHAR(128) NULL COMMENT '',
  `active` INT NULL DEFAULT 0 COMMENT '',
  `created_at` TIMESTAMP NULL COMMENT '',
  `updated_at` TIMESTAMP NULL COMMENT '',
  PRIMARY KEY (`id`)  COMMENT '',
  UNIQUE INDEX `username_UNIQUE` (`username` ASC)  COMMENT '',
  UNIQUE INDEX `email_UNIQUE` (`email` ASC)  COMMENT '')
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `gpt-qoutes`.`groups`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `gpt-qoutes`.`groups` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `group` VARCHAR(128) NOT NULL COMMENT '',
  PRIMARY KEY (`id`)  COMMENT '',
  UNIQUE INDEX `group_UNIQUE` (`group` ASC)  COMMENT '')
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `gpt-qoutes`.`users_groups`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `gpt-qoutes`.`users_groups` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `user_id` INT NOT NULL COMMENT '',
  `group_id` INT NOT NULL COMMENT '',
  PRIMARY KEY (`id`)  COMMENT '',
  INDEX `ug_user_id_fk_idx` (`user_id` ASC)  COMMENT '',
  INDEX `ug_group_id_fk_idx` (`group_id` ASC)  COMMENT '',
  UNIQUE INDEX `id_UNIQUE` (`id` ASC)  COMMENT '',
  CONSTRAINT `ug_user_id_fk`
    FOREIGN KEY (`user_id`)
    REFERENCES `gpt-qoutes`.`users` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `ug_group_id_fk`
    FOREIGN KEY (`group_id`)
    REFERENCES `gpt-qoutes`.`groups` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `gpt-qoutes`.`categories`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `gpt-qoutes`.`categories` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `category` VARCHAR(128) NOT NULL COMMENT '',
  `parent` INT NULL COMMENT '',
  `created_at` TIMESTAMP NULL COMMENT '',
  `updated_at` TIMESTAMP NULL COMMENT '',
  PRIMARY KEY (`id`)  COMMENT '')
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `gpt-qoutes`.`products`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `gpt-qoutes`.`products` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `name` VARCHAR(128) NOT NULL COMMENT '',
  `category_id` INT NOT NULL COMMENT '',
  `description` VARCHAR(256) NULL COMMENT '',
  `stock` INT NOT NULL DEFAULT 0 COMMENT '',
  `created_at` TIMESTAMP NULL COMMENT '',
  `updated_at` TIMESTAMP NULL COMMENT '',
  PRIMARY KEY (`id`)  COMMENT '',
  INDEX `prod_category_fk_idx` (`category_id` ASC)  COMMENT '',
  CONSTRAINT `prod_category_fk`
    FOREIGN KEY (`category_id`)
    REFERENCES `gpt-qoutes`.`categories` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `gpt-qoutes`.`currency`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `gpt-qoutes`.`currency` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `currency` VARCHAR(256) NOT NULL COMMENT '',
  `code` VARCHAR(128) NOT NULL COMMENT '',
  `symbol` VARCHAR(100) NULL COMMENT '',
  PRIMARY KEY (`id`)  COMMENT '')
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `gpt-qoutes`.`clients`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `gpt-qoutes`.`clients` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `company` VARCHAR(128) NULL COMMENT '',
  `address` VARCHAR(128) NULL COMMENT '',
  `contact_person` VARCHAR(128) NULL COMMENT '',
  `address_line1` VARCHAR(128) NULL COMMENT '',
  `address_line2` VARCHAR(128) NULL COMMENT '',
  `address_line3` VARCHAR(128) NULL COMMENT '',
  `province` VARCHAR(128) NULL COMMENT '',
  `postal_code` VARCHAR(128) NULL COMMENT '',
  `phone_number` VARCHAR(128) NULL COMMENT '',
  `cell_number` VARCHAR(128) NULL COMMENT '',
  `email` VARCHAR(128) NULL COMMENT '',
  `created_at` TIMESTAMP NULL COMMENT '',
  `updated_at` TIMESTAMP NULL COMMENT '',
  PRIMARY KEY (`id`)  COMMENT '')
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `gpt-qoutes`.`quote_status`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `gpt-qoutes`.`quote_status` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `status` VARCHAR(128) NOT NULL COMMENT '',
  PRIMARY KEY (`id`)  COMMENT '')
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `gpt-qoutes`.`discount_list`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `gpt-qoutes`.`discount_list` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `discount` DECIMAL NULL COMMENT '',
  PRIMARY KEY (`id`)  COMMENT '')
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `gpt-qoutes`.`quotes`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `gpt-qoutes`.`quotes` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `client_id` INT NOT NULL COMMENT '',
  `user_id` INT NOT NULL COMMENT '',
  `qoute_date` DATETIME NOT NULL COMMENT '',
  `status` INT NOT NULL COMMENT '',
  `discount` INT NOT NULL COMMENT '',
  `created_at` TIMESTAMP NULL COMMENT '',
  `updated_at` TIMESTAMP NULL COMMENT '',
  PRIMARY KEY (`id`)  COMMENT '',
  UNIQUE INDEX `id_UNIQUE` (`id` ASC)  COMMENT '',
  INDEX `q_client_fk_idx` (`client_id` ASC)  COMMENT '',
  INDEX `q_status_fk_idx` (`status` ASC)  COMMENT '',
  INDEX `q_discount_fk_idx` (`discount` ASC)  COMMENT '',
  INDEX `q_user_fk_idx` (`user_id` ASC)  COMMENT '',
  CONSTRAINT `q_client_fk`
    FOREIGN KEY (`client_id`)
    REFERENCES `gpt-qoutes`.`clients` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `q_status_fk`
    FOREIGN KEY (`status`)
    REFERENCES `gpt-qoutes`.`quote_status` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `q_discount_fk`
    FOREIGN KEY (`discount`)
    REFERENCES `gpt-qoutes`.`discount_list` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `q_user_fk`
    FOREIGN KEY (`user_id`)
    REFERENCES `gpt-qoutes`.`users` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `gpt-qoutes`.`quote_products`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `gpt-qoutes`.`quote_products` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `quote_id` INT NOT NULL COMMENT '',
  `product_id` INT NOT NULL COMMENT '',
  `quantity` INT NULL DEFAULT 0 COMMENT '',
  `price` DECIMAL NULL COMMENT '',
  `discount_id` INT NULL COMMENT '',
  PRIMARY KEY (`id`)  COMMENT '',
  INDEX `qp_quote_fk_idx` (`quote_id` ASC)  COMMENT '',
  INDEX `qp_product_fk_idx` (`product_id` ASC)  COMMENT '',
  INDEX `qp_discount_fk_idx` (`discount_id` ASC)  COMMENT '',
  CONSTRAINT `qp_quote_fk`
    FOREIGN KEY (`quote_id`)
    REFERENCES `gpt-qoutes`.`quotes` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `qp_product_fk`
    FOREIGN KEY (`product_id`)
    REFERENCES `gpt-qoutes`.`products` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `qp_discount_fk`
    FOREIGN KEY (`discount_id`)
    REFERENCES `gpt-qoutes`.`discount_list` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `gpt-qoutes`.`group_access`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `gpt-qoutes`.`group_access` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `group_id` INT NOT NULL COMMENT '',
  `access` VARCHAR(128) NOT NULL COMMENT '',
  `group_access` VARCHAR(128) NOT NULL COMMENT '',
  PRIMARY KEY (`id`)  COMMENT '',
  UNIQUE INDEX `id_UNIQUE` (`id` ASC)  COMMENT '',
  INDEX `ga_group_access_fk_idx` (`group_id` ASC)  COMMENT '',
  CONSTRAINT `ga_group_access_fk`
    FOREIGN KEY (`group_id`)
    REFERENCES `gpt-qoutes`.`groups` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `gpt-qoutes`.`exchange_fx_price`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `gpt-qoutes`.`exchange_fx_price` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `product_id` INT NOT NULL COMMENT '',
  `price` DOUBLE(10,4) NOT NULL COMMENT '',
  `base_currency` INT NOT NULL COMMENT '',
  `to_currency` INT NOT NULL COMMENT '',
  `exchange_rate` DOUBLE(10,4) NOT NULL COMMENT '',
  `commision` FLOAT NULL COMMENT '',
  `created_at` TIMESTAMP NULL COMMENT '',
  `updated_at` TIMESTAMP NULL COMMENT '',
  PRIMARY KEY (`id`)  COMMENT '',
  INDEX `ex_product_fk_idx` (`product_id` ASC)  COMMENT '',
  INDEX `ex_bcurrency_fk_idx` (`base_currency` ASC)  COMMENT '',
  INDEX `ex_tcurrency_fk_idx` (`to_currency` ASC)  COMMENT '',
  CONSTRAINT `ex_product_fk`
    FOREIGN KEY (`product_id`)
    REFERENCES `gpt-qoutes`.`products` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `ex_bcurrency_fk`
    FOREIGN KEY (`base_currency`)
    REFERENCES `gpt-qoutes`.`currency` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `ex_tcurrency_fk`
    FOREIGN KEY (`to_currency`)
    REFERENCES `gpt-qoutes`.`currency` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
